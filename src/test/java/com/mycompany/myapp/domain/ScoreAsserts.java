package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ScoreAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertScoreAllPropertiesEquals(Score expected, Score actual) {
        assertScoreAutoGeneratedPropertiesEquals(expected, actual);
        assertScoreAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertScoreAllUpdatablePropertiesEquals(Score expected, Score actual) {
        assertScoreUpdatableFieldsEquals(expected, actual);
        assertScoreUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertScoreAutoGeneratedPropertiesEquals(Score expected, Score actual) {
        assertThat(actual)
            .as("Verify Score auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertScoreUpdatableFieldsEquals(Score expected, Score actual) {
        assertThat(actual)
            .as("Verify Score relevant properties")
            .satisfies(a -> assertThat(a.getValue()).as("check value").isEqualTo(expected.getValue()))
            .satisfies(a -> assertThat(a.getSubject()).as("check subject").isEqualTo(expected.getSubject()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertScoreUpdatableRelationshipsEquals(Score expected, Score actual) {
        assertThat(actual)
            .as("Verify Score relationships")
            .satisfies(a -> assertThat(a.getResult()).as("check result").isEqualTo(expected.getResult()));
    }
}
